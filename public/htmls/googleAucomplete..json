
{
_events: {
  close: undefined,
  error: undefined,
  data: undefined,
  end: undefined,
  readable: undefined
},
_readableState: ReadableState {
  highWaterMark: 16384,
  buffer: [],
  bufferIndex: 0,
  length: 0,
  pipes: [],
  awaitDrainWriters: null,
  [Symbol(kState)]: 1315596
},
_maxListeners: undefined,
socket: <ref *1> Socket {
  connecting: false,
  _hadError: false,
  _parent: null,
  _host: null,
  _closeAfterHandlingError: false,
  _events: {
    close: [Array],
    error: [Array],
    prefinish: undefined,
    finish: undefined,
    drain: [Function: bound socketOnDrain],
    data: [Function: bound socketOnData],
    end: [Array],
    readable: undefined,
    timeout: [Function: socketOnTimeout],
    resume: [Function: onSocketResume],
    pause: [Function: onSocketPause]
  },
  _readableState: ReadableState {
    highWaterMark: 16384,
    buffer: [],
    bufferIndex: 0,
    length: 0,
    pipes: [],
    awaitDrainWriters: null,
    [Symbol(kState)]: 193997060
  },
  _writableState: WritableState {
    highWaterMark: 16384,
    length: 0,
    corked: 0,
    onwrite: [Function: bound onwrite],
    writelen: 0,
    bufferedIndex: 0,
    pendingcb: 0,
    [Symbol(kState)]: 17564420,
    [Symbol(kBufferedValue)]: null
  },
  allowHalfOpen: true,
  _maxListeners: undefined,
  _eventsCount: 8,
  _sockname: null,
  _pendingData: null,
  _pendingEncoding: '',
  server: Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    requestTimeout: 300000,
    headersTimeout: 60000,
    keepAliveTimeout: 5000,
    connectionsCheckingInterval: 30000,
    requireHostHeader: true,
    joinDuplicateHeaders: undefined,
    rejectNonStandardBodyWrites: false,
    _events: [Object: null prototype],
    _eventsCount: 4,
    _maxListeners: undefined,
    _connections: 2,
    _handle: [TCP],
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    noDelay: true,
    keepAlive: false,
    keepAliveInitialDelay: 0,
    highWaterMark: 16384,
    httpAllowHalfOpen: false,
    timeout: 0,
    maxHeadersCount: null,
    maxRequestsPerSocket: 0,
    _connectionKey: '4:10.109.10.1:3333',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(shapeMode)]: false,
    [Symbol(kCapture)]: false,
    [Symbol(async_id_symbol)]: 11,
    [Symbol(kUniqueHeaders)]: null,
    [Symbol(http.server.connections)]: ConnectionsList {},
    [Symbol(http.server.connectionsCheckingInterval)]: Timeout {
      _idleTimeout: 30000,
      _idlePrev: [TimersList],
      _idleNext: [TimersList],
      _idleStart: 30316,
      _onTimeout: [Function: bound checkConnections],
      _timerArgs: undefined,
      _repeat: 30000,
      _destroyed: false,
      [Symbol(refed)]: false,
      [Symbol(kHasPrimitive)]: false,
      [Symbol(asyncId)]: 13,
      [Symbol(triggerId)]: 12
    }
  },
  _server: Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    requestTimeout: 300000,
    headersTimeout: 60000,
    keepAliveTimeout: 5000,
    connectionsCheckingInterval: 30000,
    requireHostHeader: true,
    joinDuplicateHeaders: undefined,
    rejectNonStandardBodyWrites: false,
    _events: [Object: null prototype],
    _eventsCount: 4,
    _maxListeners: undefined,
    _connections: 2,
    _handle: [TCP],
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    noDelay: true,
    keepAlive: false,
    keepAliveInitialDelay: 0,
    highWaterMark: 16384,
    httpAllowHalfOpen: false,
    timeout: 0,
    maxHeadersCount: null,
    maxRequestsPerSocket: 0,
    _connectionKey: '4:10.109.10.1:3333',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(shapeMode)]: false,
    [Symbol(kCapture)]: false,
    [Symbol(async_id_symbol)]: 11,
    [Symbol(kUniqueHeaders)]: null,
    [Symbol(http.server.connections)]: ConnectionsList {},
    [Symbol(http.server.connectionsCheckingInterval)]: Timeout {
      _idleTimeout: 30000,
      _idlePrev: [TimersList],
      _idleNext: [TimersList],
      _idleStart: 30316,
      _onTimeout: [Function: bound checkConnections],
      _timerArgs: undefined,
      _repeat: 30000,
      _destroyed: false,
      [Symbol(refed)]: false,
      [Symbol(kHasPrimitive)]: false,
      [Symbol(asyncId)]: 13,
      [Symbol(triggerId)]: 12
    }
  },
  parser: HTTPParser {
    '0': null,
    '1': [Function: parserOnHeaders],
    '2': [Function: parserOnHeadersComplete],
    '3': [Function: parserOnBody],
    '4': [Function: parserOnMessageComplete],
    '5': [Function: bound onParserExecute],
    '6': [Function: bound onParserTimeout],
    _headers: [],
    _url: '',
    socket: [Circular *1],
    incoming: [Circular *2],
    outgoing: null,
    maxHeaderPairs: 2000,
    _consumed: true,
    onIncoming: [Function: bound parserOnIncoming],
    joinDuplicateHeaders: null,
    [Symbol(resource_symbol)]: [HTTPServerAsyncResource]
  },
  on: [Function: socketListenerWrap],
  addListener: [Function: socketListenerWrap],
  prependListener: [Function: socketListenerWrap],
  setEncoding: [Function: socketSetEncoding],
  _paused: false,
  _httpMessage: ServerResponse {
    _events: [Object: null prototype],
    _eventsCount: 2,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    destroyed: false,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    maxRequestsOnConnectionReached: false,
    _defaultKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    strictContentLength: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    _closed: false,
    socket: [Circular *1],
    _header: null,
    _keepAliveTimeout: 5000,
    _onPendingData: [Function: bound updateOutgoingData],
    req: [Circular *2],
    _sent100: false,
    _expect_continue: false,
    _maxRequestsPerSocket: 0,
    locals: [Object: null prototype] {},
    _startAt: undefined,
    _startTime: undefined,
    writeHead: [Function: writeHead],
    __onFinished: [Function],
    [Symbol(shapeMode)]: false,
    [Symbol(kCapture)]: false,
    [Symbol(kBytesWritten)]: 0,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype],
    [Symbol(errored)]: null,
    [Symbol(kHighWaterMark)]: 16384,
    [Symbol(kRejectNonStandardBodyWrites)]: false,
    [Symbol(kUniqueHeaders)]: null
  },
  _peername: { address: '10.109.10.1', family: 'IPv4', port: 56926 },
  [Symbol(async_id_symbol)]: 15,
  [Symbol(kHandle)]: TCP {
    reading: true,
    onconnection: null,
    _consumed: true,
    [Symbol(owner_symbol)]: [Circular *1]
  },
  [Symbol(lastWriteQueueSize)]: 0,
  [Symbol(timeout)]: null,
  [Symbol(kBuffer)]: null,
  [Symbol(kBufferCb)]: null,
  [Symbol(kBufferGen)]: null,
  [Symbol(shapeMode)]: true,
  [Symbol(kCapture)]: false,
  [Symbol(kSetNoDelay)]: true,
  [Symbol(kSetKeepAlive)]: false,
  [Symbol(kSetKeepAliveInitialDelay)]: 0,
  [Symbol(kBytesRead)]: 0,
  [Symbol(kBytesWritten)]: 0
},
httpVersionMajor: 1,
httpVersionMinor: 1,
httpVersion: '1.1',
complete: true,
rawHeaders: [
  'Host',
  '10.109.10.1:3333',
  'Connection',
  'keep-alive',
  'Cache-Control',
  'max-age=0',
  'Upgrade-Insecure-Requests',
  '1',
  'User-Agent',
  'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36 OPR/106.0.0.0',
  'Accept',
  'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,***;q=0.8,application/signed-exchange;v=b3;q=0.7',
  'Accept-Encoding',
  'gzip, deflate',
  'Accept-Language',
  'es,es-ES;q=0.9',
  'If-None-Match',
  'W/"6b-+FBN1+4cgrIWVUSGZ+AXGX06qoc"'
],
rawTrailers: [],
joinDuplicateHeaders: null,
aborted: false,
upgrade: false,
url: '/buscar/Pancho',
method: 'GET',
statusCode: null,
statusMessage: null,
client: <ref *1> Socket {
  connecting: false,
  _hadError: false,
  _parent: null,
  _host: null,
  _closeAfterHandlingError: false,
  _events: {
    close: [Array],
    error: [Array],
    prefinish: undefined,
    finish: undefined,
    drain: [Function: bound socketOnDrain],
    data: [Function: bound socketOnData],
    end: [Array],
    readable: undefined,
    timeout: [Function: socketOnTimeout],
    resume: [Function: onSocketResume],
    pause: [Function: onSocketPause]
  },
  _readableState: ReadableState {
    highWaterMark: 16384,
    buffer: [],
    bufferIndex: 0,
    length: 0,
    pipes: [],
    awaitDrainWriters: null,
    [Symbol(kState)]: 193997060
  },
  _writableState: WritableState {
    highWaterMark: 16384,
    length: 0,
    corked: 0,
    onwrite: [Function: bound onwrite],
    writelen: 0,
    bufferedIndex: 0,
    pendingcb: 0,
    [Symbol(kState)]: 17564420,
    [Symbol(kBufferedValue)]: null
  },
  allowHalfOpen: true,
  _maxListeners: undefined,
  _eventsCount: 8,
  _sockname: null,
  _pendingData: null,
  _pendingEncoding: '',
  server: Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    requestTimeout: 300000,
    headersTimeout: 60000,
    keepAliveTimeout: 5000,
    connectionsCheckingInterval: 30000,
    requireHostHeader: true,
    joinDuplicateHeaders: undefined,
    rejectNonStandardBodyWrites: false,
    _events: [Object: null prototype],
    _eventsCount: 4,
    _maxListeners: undefined,
    _connections: 2,
    _handle: [TCP],
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    noDelay: true,
    keepAlive: false,
    keepAliveInitialDelay: 0,
    highWaterMark: 16384,
    httpAllowHalfOpen: false,
    timeout: 0,
    maxHeadersCount: null,
    maxRequestsPerSocket: 0,
    _connectionKey: '4:10.109.10.1:3333',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(shapeMode)]: false,
    [Symbol(kCapture)]: false,
    [Symbol(async_id_symbol)]: 11,
    [Symbol(kUniqueHeaders)]: null,
    [Symbol(http.server.connections)]: ConnectionsList {},
    [Symbol(http.server.connectionsCheckingInterval)]: Timeout {
      _idleTimeout: 30000,
      _idlePrev: [TimersList],
      _idleNext: [TimersList],
      _idleStart: 30316,
      _onTimeout: [Function: bound checkConnections],
      _timerArgs: undefined,
      _repeat: 30000,
      _destroyed: false,
      [Symbol(refed)]: false,
      [Symbol(kHasPrimitive)]: false,
      [Symbol(asyncId)]: 13,
      [Symbol(triggerId)]: 12
    }
  },
  _server: Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    requestTimeout: 300000,
    headersTimeout: 60000,
    keepAliveTimeout: 5000,
    connectionsCheckingInterval: 30000,
    requireHostHeader: true,
    joinDuplicateHeaders: undefined,
    rejectNonStandardBodyWrites: false,
    _events: [Object: null prototype],
    _eventsCount: 4,
    _maxListeners: undefined,
    _connections: 2,
    _handle: [TCP],
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    noDelay: true,
    keepAlive: false,
    keepAliveInitialDelay: 0,
    highWaterMark: 16384,
    httpAllowHalfOpen: false,
    timeout: 0,
    maxHeadersCount: null,
    maxRequestsPerSocket: 0,
    _connectionKey: '4:10.109.10.1:3333',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(shapeMode)]: false,
    [Symbol(kCapture)]: false,
    [Symbol(async_id_symbol)]: 11,
    [Symbol(kUniqueHeaders)]: null,
    [Symbol(http.server.connections)]: ConnectionsList {},
    [Symbol(http.server.connectionsCheckingInterval)]: Timeout {
      _idleTimeout: 30000,
      _idlePrev: [TimersList],
      _idleNext: [TimersList],
      _idleStart: 30316,
      _onTimeout: [Function: bound checkConnections],
      _timerArgs: undefined,
      _repeat: 30000,
      _destroyed: false,
      [Symbol(refed)]: false,
      [Symbol(kHasPrimitive)]: false,
      [Symbol(asyncId)]: 13,
      [Symbol(triggerId)]: 12
    }
  },
  parser: HTTPParser {
    '0': null,
    '1': [Function: parserOnHeaders],
    '2': [Function: parserOnHeadersComplete],
    '3': [Function: parserOnBody],
    '4': [Function: parserOnMessageComplete],
    '5': [Function: bound onParserExecute],
    '6': [Function: bound onParserTimeout],
    _headers: [],
    _url: '',
    socket: [Circular *1],
    incoming: [Circular *2],
    outgoing: null,
    maxHeaderPairs: 2000,
    _consumed: true,
    onIncoming: [Function: bound parserOnIncoming],
    joinDuplicateHeaders: null,
    [Symbol(resource_symbol)]: [HTTPServerAsyncResource]
  },
  on: [Function: socketListenerWrap],
  addListener: [Function: socketListenerWrap],
  prependListener: [Function: socketListenerWrap],
  setEncoding: [Function: socketSetEncoding],
  _paused: false,
  _httpMessage: ServerResponse {
    _events: [Object: null prototype],
    _eventsCount: 2,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    destroyed: false,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    maxRequestsOnConnectionReached: false,
    _defaultKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    strictContentLength: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    _closed: false,
    socket: [Circular *1],
    _header: null,
    _keepAliveTimeout: 5000,
    _onPendingData: [Function: bound updateOutgoingData],
    req: [Circular *2],
    _sent100: false,
    _expect_continue: false,
    _maxRequestsPerSocket: 0,
    locals: [Object: null prototype] {},
    _startAt: undefined,
    _startTime: undefined,
    writeHead: [Function: writeHead],
    __onFinished: [Function],
    [Symbol(shapeMode)]: false,
    [Symbol(kCapture)]: false,
    [Symbol(kBytesWritten)]: 0,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype],
    [Symbol(errored)]: null,
    [Symbol(kHighWaterMark)]: 16384,
    [Symbol(kRejectNonStandardBodyWrites)]: false,
    [Symbol(kUniqueHeaders)]: null
  },
  _peername: { address: '10.109.10.1', family: 'IPv4', port: 56926 },
  [Symbol(async_id_symbol)]: 15,
  [Symbol(kHandle)]: TCP {
    reading: true,
    onconnection: null,
    _consumed: true,
    [Symbol(owner_symbol)]: [Circular *1]
  },
  [Symbol(lastWriteQueueSize)]: 0,
  [Symbol(timeout)]: null,
  [Symbol(kBuffer)]: null,
  [Symbol(kBufferCb)]: null,
  [Symbol(kBufferGen)]: null,
  [Symbol(shapeMode)]: true,
  [Symbol(kCapture)]: false,
  [Symbol(kSetNoDelay)]: true,
  [Symbol(kSetKeepAlive)]: false,
  [Symbol(kSetKeepAliveInitialDelay)]: 0,
  [Symbol(kBytesRead)]: 0,
  [Symbol(kBytesWritten)]: 0
},
_consuming: false,
_dumped: false,
next: [Function: next],
baseUrl: '/cliente',
originalUrl: '/cliente/buscar/Pancho',
_parsedUrl: Url {
  protocol: null,
  slashes: null,
  auth: null,
  host: null,
  port: null,
  hostname: null,
  hash: null,
  search: null,
  query: null,
  pathname: '/buscar/Pancho',
  path: '/buscar/Pancho',
  href: '/buscar/Pancho',
  _raw: '/buscar/Pancho'
},
params: { nombre: 'Pancho' },
query: {},
res: <ref *3> ServerResponse {
  _events: [Object: null prototype] {
    finish: [Array],
    end: [Function: onevent]
  },
  _eventsCount: 2,
  _maxListeners: undefined,
  outputData: [],
  outputSize: 0,
  writable: true,
  destroyed: false,
  _last: false,
  chunkedEncoding: false,
  shouldKeepAlive: true,
  maxRequestsOnConnectionReached: false,
  _defaultKeepAlive: true,
  useChunkedEncodingByDefault: true,
  sendDate: true,
  _removedConnection: false,
  _removedContLen: false,
  _removedTE: false,
  strictContentLength: false,
  _contentLength: null,
  _hasBody: true,
  _trailer: '',
  finished: false,
  _headerSent: false,
  _closed: false,
  socket: <ref *1> Socket {
    connecting: false,
    _hadError: false,
    _parent: null,
    _host: null,
    _closeAfterHandlingError: false,
    _events: [Object],
    _readableState: [ReadableState],
    _writableState: [WritableState],
    allowHalfOpen: true,
    _maxListeners: undefined,
    _eventsCount: 8,
    _sockname: null,
    _pendingData: null,
    _pendingEncoding: '',
    server: [Server],
    _server: [Server],
    parser: [HTTPParser],
    on: [Function: socketListenerWrap],
    addListener: [Function: socketListenerWrap],
    prependListener: [Function: socketListenerWrap],
    setEncoding: [Function: socketSetEncoding],
    _paused: false,
    _httpMessage: [Circular *3],
    _peername: [Object],
    [Symbol(async_id_symbol)]: 15,
    [Symbol(kHandle)]: [TCP],
    [Symbol(lastWriteQueueSize)]: 0,
    [Symbol(timeout)]: null,
    [Symbol(kBuffer)]: null,
    [Symbol(kBufferCb)]: null,
    [Symbol(kBufferGen)]: null,
    [Symbol(shapeMode)]: true,
    [Symbol(kCapture)]: false,
    [Symbol(kSetNoDelay)]: true,
    [Symbol(kSetKeepAlive)]: false,
    [Symbol(kSetKeepAliveInitialDelay)]: 0,
    [Symbol(kBytesRead)]: 0,
    [Symbol(kBytesWritten)]: 0
  },
  _header: null,
  _keepAliveTimeout: 5000,
  _onPendingData: [Function: bound updateOutgoingData],
  req: [Circular *2],
  _sent100: false,
  _expect_continue: false,
  _maxRequestsPerSocket: 0,
  locals: [Object: null prototype] {},
  _startAt: undefined,
  _startTime: undefined,
  writeHead: [Function: writeHead],
  __onFinished: [Function: listener] { queue: [Array] },
  [Symbol(shapeMode)]: false,
  [Symbol(kCapture)]: false,
  [Symbol(kBytesWritten)]: 0,
  [Symbol(kNeedDrain)]: false,
  [Symbol(corked)]: 0,
  [Symbol(kOutHeaders)]: [Object: null prototype] { 'x-powered-by': [Array] },
  [Symbol(errored)]: null,
  [Symbol(kHighWaterMark)]: 16384,
  [Symbol(kRejectNonStandardBodyWrites)]: false,
  [Symbol(kUniqueHeaders)]: null
},
_startAt: [ 517106, 991499500 ],
_startTime: 2024-01-25T21:05:04.194Z,
_remoteAddress: '10.109.10.1',
body: {},
 : undefined,
cookies: [Object: null prototype] {},
signedCookies: [Object: null prototype] {},
_parsedOriginalUrl: Url {
  protocol: null,
  slashes: null,
  auth: null,
  host: null,
  port: null,
  hostname: null,
  hash: null,
  search: null,
  query: null,
  pathname: '/cliente/buscar/Pancho',
  path: '/cliente/buscar/Pancho',
  href: '/cliente/buscar/Pancho',
  _raw: '/cliente/buscar/Pancho'
},
route: Route {
  path: '/buscar/:nombre',
  stack: [ [Layer] ],
  methods: { get: true }
}
}







































{
  "search_metadata": {
    "id": "65aa55e3eb690f40e290460e",
    "status": "Success",
    "json_endpoint": "https://serpapi.com/searches/ceb471cb10a7b113/65aa55e3eb690f40e290460e.json",
    "created_at": "2024-01-19 10:58:43 UTC",
    "processed_at": "2024-01-19 10:58:43 UTC",
    "google_maps_autocomplete_url": "https://www.google.com/s?q=Hacienda+Santoral+109&tbm=map&gs_ri=maps&suggest=p&pb=!2i21!4m9!1m3!1d25748.46117238505!2d-102.0083012!3d22.7455096!2m0!3m2!1i2160!2i1440!4f13.1!7i20!10b1!12m16!1m1!18b1!2m3!5m1!6e2!20e3!10b1!12b1!13b1!16b1!17m1!3e1!20m3!5e2!6b1!14b1!19m4!2m3!1i360!2i120!4i8!20m57!2m2!1i203!2i100!3m2!2i4!5b1!6m6!1m2!1i86!2i86!1m2!1i408!2i240!7m42!1m3!1e1!2b0!3e3!1m3!1e2!2b1!3e2!1m3!1e2!2b0!3e3!1m3!1e8!2b0!3e3!1m3!1e10!2b0!3e3!1m3!1e10!2b1!3e2!1m3!1e9!2b1!3e2!1m3!1e10!2b0!3e3!1m3!1e10!2b1!3e2!1m3!1e10!2b0!3e4!2b1!4b1!9b0!22m2!1sjvIidklgzAYg_ohqmicG5po!7e81!23m2!4b1!10b1!24m82!1m29!13m9!2b1!3b1!4b1!6i1!8b1!9b1!14b1!20b1!25b1!18m18!3b1!4b1!5b1!6b1!9b1!12b1!13b1!14b1!15b1!17b1!20b1!21b1!22b0!25b1!27m1!1b0!28b0!30b0!2b1!5m6!2b1!3b1!5b1!6b1!7b1!10b1!10m1!8e3!11m1!3e1!14m1!3b1!17b1!20m2!1e3!1e6!24b1!25b1!26b1!29b1!30m1!2b1!36b1!39m3!2m2!2i1!3i1!43b1!52b1!54m1!1b1!55b1!56m2!1b1!3b1!65m5!3m4!1m3!1m2!1i224!2i298!71b1!72m4!1m2!3b1!5b1!4b1!89b1!103b1!113b1!26m4!2m3!1i80!2i92!4i8!34m18!2b1!3b1!4b1!6b1!8m6!1b1!3b1!4b1!5b1!6b1!7b1!9b1!12b1!14b1!20b1!23b1!25b1!26b1!37m1!1e81!47m0!49m6!3b1!6m2!1b1!2b1!7m1!1e3!67m2!7b1!10b1!69i648",
    "raw_html_file": "https://serpapi.com/searches/3be13bc94ecb28f0/65aa55e3eb690f40e290460e.html",
    "prettify_html_file": "https://serpapi.com/searches/e06616ff265226ef/65aa55e3eb690f40e290460e.prettify",
    "total_time_taken": 3.6
  },
  "search_parameters": {
    "engine": "google_maps_autocomplete",
    "q": "Hacienda Santoral 109",
    "ll": "@22.7455096,-102.0083012,15.1z"
  },
  "search_information": {
    "query_displayed": "Hacienda Santoral 109"
  },
  "suggestions": [
    {
      "value": "Avenida Hacienda Santoral 109",
      "serpapi_link": "https://serpapi.com/search.json?engine=google_maps_autocomplete&ll=%4022.7455096%2C-102.0083012%2C15.1z&q=Avenida+Hacienda+Santoral+109",
      "subtext": "Hacienda San Marcos, Aguascalientes, Mexico",
      "type": "place",
      "latitude": 21.8060713,
      "longitude": -102.2653169,
      "data_id": "0x8429ed663bacba4b:0x422e0b3cf3ad2949",
      "reviews_serpapi_link": "https://serpapi.com/search.json?data_id=0x8429ed663bacba4b%3A0x422e0b3cf3ad2949&engine=google_maps_reviews&hl=en",
      "photos_serpapi_link": "https://serpapi.com/search.json?data_id=0x8429ed663bacba4b%3A0x422e0b3cf3ad2949&engine=google_maps_photos&hl=en",
      "maps_serpapi_link": "https://serpapi.com/search.json?data=%214m5%213m4%211s0x8429ed663bacba4b%3A0x422e0b3cf3ad2949%218m2%213d21.8060713%214d-102.2653169&engine=google_maps&google_domain=google.com&hl=en&ll=%4022.7455096%2C-102.0083012%2C15.1z&q=Avenida+Hacienda+Santoral+109&type=place"
    },
    {
      "value": "Hacienda Santoral 109",
      "serpapi_link": "https://serpapi.com/search.json?engine=google_maps_autocomplete&ll=%4022.7455096%2C-102.0083012%2C15.1z&q=Hacienda+Santoral+109",
      "subtext": "Hacienda San Marcos, Aguascalientes, Mexico",
      "type": "place",
      "latitude": 21.8055844,
      "longitude": -102.266646,
      "maps_serpapi_link": "https://serpapi.com/search.json?engine=google_maps&google_domain=google.com&hl=en&ll=%4022.7455096%2C-102.0083012%2C15.1z&q=Hacienda+Santoral+109&type=search"
    }
  ]
}